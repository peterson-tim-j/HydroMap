library(sp)
library(grid)
library(gstat)
library(raster)
library(RSAGA)
library(parallel)
library(rgenoud)


set.env()

# Load water table observations from  April 2000 for Victoria, Australia and a 250m state-wide DEM.
data('victoria.groundwater')

# Load a model variogram and mapping parametyers found to be effective.
data('mapping.parameters')

# Define a simple kriging formula without MrVBF terms that does not require the package RSAGA.
f <- as.formula('head ~ elev + smoothing')

# Crop this Statewide DEM abd obs pointvs to a small in the centre. 
# Note, this is done to reduce the runtime. Comment out these two lines to map the whole state.
DEM <- raster::crop(raster::raster(DEM), raster::extent(2400000, 2500000, 2550000, 2650000))
DEM = as(DEM,'SpatialGridDataFrame')
obs.data <- raster::crop(obs.data, DEM, inverse = F) 

variogram.model = vgm(psill=10, model='Mat', range= 10000 , nugget=1, kappa=0.1);

obs.data$total_err_var = pmax(obs.data$total_err_var, 0.05)

# Calibrate the mapping parameters with 25% of the data randomly selected at 2 cores.
calib.results <- krige.head.calib(formula=f, grid=DEM, data=obs.data, newdata=0.25, nmin=0, nmax=Inf, maxdist=Inf, omax=0,
                                  data.errvar.colname='total_err_var', model = variogram.model,  fit.variogram.type=1,
                                  pop.size.multiplier=1, debug.level=0, use.cluster = 2)

# Map calibration results using all of the observed data abd all cores. 
head.grid <- krige.head(calibration.results = calib.results, data=obs.data, use.cluster = T)

# Re-calibrate using MrVBF
#------------------------------------

set.env(saga.path = 'C:/Program Files (x86)/saga-9.0.1_x64',saga.modules = 'C:/Program Files (x86)/saga-9.0.1_x64/tools')

f <- as.formula('head ~ elev + MrVBF + smoothing')

calib.results.mrVBF <- krige.head.calib(formula=f, grid=DEM, data=obs.data, newdata=0.25, nmin=0, nmax=Inf, maxdist=Inf, omax=0,
                                  data.errvar.colname='total_err_var', model = variogram.model,  fit.variogram.type=1,
                                  pop.size.multiplier=1, debug.level=0, use.cluster = 2)

